---
- name: Fuse Install Playbook
  hosts: all
  vars:
    jboss_group: jboss
    username: jboss
    user_pswd: Admin1234!
    user_home: /usr/local/jboss
    rh_username: matthew.hughes@axcelinno.io
    rh_password: Mr93ae96
    jboss_fuse_artifact_url: https://jbossproductsaps.s3.amazonaws.com/amq-broker-7.2.3-bin.zip
    symlink_name: AMQ7


  tasks:
    - name: Create the Jboss Fuse Group
      group:
        name: "{{ jboss_group }}"
        system: yes
        state: present
        gid: "400"
      tags:
        - jboss_fuse
    
    - name: Add user
      user:
        name: "{{ username }}"
        comment: "Jboss User"
        password: "{{ '{{ user_pswd }}' | password_hash('sha512') }}"
        create_home: true
        home: "{{ user_home }}"
    - name: Defensive Programming to check if FUSE already isntalled... Check existence of Libraries
      become: true
      stat:
        path: "{{ user_home + '/jboss-fuse6.2.1.redhat-084/etc/org.apache.karaf.features.cfg'}}"
      register: jboss_fuse_exists
      tags:
        - jboss_fuse
        
    - name: Install Java and Maven
      yum:
        name: "{{ packages }}"
        state: installed
      vars:
        packages:
        - java-1.8.0-openjdk
        - maven
    
    - name: Adding the path in the Profile files
      lineinfile: dest=/usr/local/jboss/.bashrc regexp='^JAVA_HOME'> line='export JAVA_HOME="/usr/lib/jvm/java"'
      
    - name: Source Bashrc
      shell: . /usr/local/jboss/.bashrc
    
    - name: Set M2_HOME var
      lineinfile: dest=/usr/local/jboss/.bashrc regexp='^M2_HOME'> line='export M2_HOME="/usr/share/maven"'

    - name: Set M2 var
      lineinfile: dest=/usr/local/jboss/.bashrc regexp='^M2'> line="export M2=$M2_HOME/bin"  

    - name: Set JAVA_PATH
      lineinfile: dest=/usr/local/jboss/.bashrc regexp='^JAVA_HOME'> line="export PATH=$M2:$PATH"

    - name: Source Bashrc
      shell: source /usr/local/jboss/.bashrc
      
    - name: Async Downlaod Jboss Fuse from RH customer portal
      get_url:
        url="{{ jboss_fuse_artifact_url }}"
        dest="{{ user_home }}"
      tags:
        - jboss_fuse
        
    - name: Unarchive (Extract) Jboss Fuse
      become: true
      unarchive:
        #make this a variable using register
        src: /usr/local/jboss/amq-broker-7.2.3-bin.zip
        dest: "{{ user_home }}"
        copy: no
        owner: "{{ username }}"
        group: "{{ jboss_group }}"
      tags:
        - jboss_fuse
    - name: Create symbolic Link
      file:
        src: '/usr/local/jboss/amq-broker-7.2.3'
        dest: '/usr/local/jboss/{{ symlink_name }}'
        state: link
        
    - name: Create broker
      expect:
        command: ./AMQ7/bin/artemis create corpbroker
        responses:
          user: admin
          password: admin 
          allow: Y
      args:
        chdir: /usr/local/jboss
        
        
    - name: Create systemctl service restart
      file:
        path: /etc/systemd/system/amq-broker.service
        state: touch

    - name: Insert Text
      blockinfile:
        path: /etc/systemd/system/amq-broker.service
        block: |
          [Unit]
          Description=AMQ Broker
          After=syslog.target network.target
          [Service]
          ExecStart=/usr/local/jboss/corpbroker1/bin/artemis run
          Restart=on-failure
          User=amq-broker
          Group=amq-broker
          # A workaround for Java signal handling
          SuccessExitStatus=143
          [Install]
          WantedBy=multi-user.target
   
    - name: Enable the broker service
      shell: sudo systemctl enable amq-broker
